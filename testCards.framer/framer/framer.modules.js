require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Material, colors, defaults,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

defaults = {
  elevation: 0,
  rippleColor: "rgba(0,0,0,0.05)",
  surfaceReaction: false
};

colors = {
  Red: {
    "50": "#ffebee",
    "100": "#ffcdd2",
    "200": "#ef9a9a",
    "300": "#e57373",
    "400": "#ef5350",
    "500": "#f44336",
    "600": "#e53935",
    "700": "#d32f2f",
    "800": "#c62828",
    "900": "#b71c1c",
    "A100": "#ff8a80",
    "A200": "#ff5252",
    "A400": "#ff1744",
    "A700": "#d50000"
  },
  Pink: {
    "50": "#fce4ec",
    "100": "#f8bbd0",
    "200": "#f48fb1",
    "300": "#f06292",
    "400": "#ec407a",
    "500": "#e91e63",
    "600": "#d81b60",
    "700": "#c2185b",
    "800": "#ad1457",
    "900": "#880e4f",
    "A100": "#ff80ab",
    "A200": "#ff4081",
    "A400": "#f50057",
    "A700": "#c51162"
  },
  Purple: {
    "50": "#f3e5f5",
    "100": "#e1bee7",
    "200": "#ce93d8",
    "300": "#ba68c8",
    "400": "#ab47bc",
    "500": "#9c27b0",
    "600": "#8e24aa",
    "700": "#7b1fa2",
    "800": "#6a1b9a",
    "900": "#4a148c",
    "A100": "#ea80fc",
    "A200": "#e040fb",
    "A400": "#d500f9",
    "A700": "#aa00ff"
  },
  DeepPurple: {
    "50": "#ede7f6",
    "100": "#d1c4e9",
    "200": "#b39ddb",
    "300": "#9575cd",
    "400": "#7e57c2",
    "500": "#673ab7",
    "600": "#5e35b1",
    "700": "#512da8",
    "800": "#4527a0",
    "900": "#311b92",
    "A100": "#b388ff",
    "A200": "#7c4dff",
    "A400": "#651fff",
    "A700": "#6200ea"
  },
  Indigo: {
    "50": "#e8eaf6",
    "100": "#c5cae9",
    "200": "#9fa8da",
    "300": "#7986cb",
    "400": "#5c6bc0",
    "500": "#3f51b5",
    "600": "#3949ab",
    "700": "#303f9f",
    "800": "#283593",
    "900": "#1a237e",
    "A100": "#8c9eff",
    "A200": "#536dfe",
    "A400": "#3d5afe",
    "A700": "#304ffe"
  },
  Blue: {
    "50": "#e3f2fd",
    "100": "#bbdefb",
    "200": "#90caf9",
    "300": "#64b5f6",
    "400": "#42a5f5",
    "500": "#2196f3",
    "600": "#1e88e5",
    "700": "#1976d2",
    "800": "#1565c0",
    "900": "#0d47a1",
    "A100": "#82b1ff",
    "A200": "#448aff",
    "A400": "#2979ff",
    "A700": "#2962ff"
  },
  LightBlue: {
    "50": "#e1f5fe",
    "100": "#b3e5fc",
    "200": "#81d4fa",
    "300": "#4fc3f7",
    "400": "#29b6f6",
    "500": "#03a9f4",
    "600": "#039be5",
    "700": "#0288d1",
    "800": "#0277bd",
    "900": "#01579b",
    "A100": "#80d8ff",
    "A200": "#40c4ff",
    "A400": "#00b0ff",
    "A700": "#0091ea"
  },
  Cyan: {
    "50": "#e0f7fa",
    "100": "#b2ebf2",
    "200": "#80deea",
    "300": "#4dd0e1",
    "400": "#26c6da",
    "500": "#00bcd4",
    "600": "#00acc1",
    "700": "#0097a7",
    "800": "#00838f",
    "900": "#006064",
    "A100": "#84ffff",
    "A200": "#18ffff",
    "A400": "#00e5ff",
    "A700": "#00b8d4"
  },
  Teal: {
    "50": "#e0f2f1",
    "100": "#b2dfdb",
    "200": "#80cbc4",
    "300": "#4db6ac",
    "400": "#26a69a",
    "500": "#009688",
    "600": "#00897b",
    "700": "#00796b",
    "800": "#00695c",
    "900": "#004d40",
    "A100": "#a7ffeb",
    "A200": "#64ffda",
    "A400": "#1de9b6",
    "A700": "#00bfa5"
  },
  Green: {
    "50": "#e8f5e9",
    "100": "#c8e6c9",
    "200": "#a5d6a7",
    "300": "#81c784",
    "400": "#66bb6a",
    "500": "#4caf50",
    "600": "#43a047",
    "700": "#388e3c",
    "800": "#2e7d32",
    "900": "#1b5e20",
    "A100": "#b9f6ca",
    "A200": "#69f0ae",
    "A400": "#00e676",
    "A700": "#00c853"
  },
  LightGreen: {
    "50": "#f1f8e9",
    "100": "#dcedc8",
    "200": "#c5e1a5",
    "300": "#aed581",
    "400": "#9ccc65",
    "500": "#8bc34a",
    "600": "#7cb342",
    "700": "#689f38",
    "800": "#558b2f",
    "900": "#33691e",
    "A100": "#ccff90",
    "A200": "#b2ff59",
    "A400": "#76ff03",
    "A700": "#64dd17"
  },
  Lime: {
    "50": "#f9fbe7",
    "100": "#f0f4c3",
    "200": "#e6ee9c",
    "300": "#dce775",
    "400": "#d4e157",
    "500": "#cddc39",
    "600": "#c0ca33",
    "700": "#afb42b",
    "800": "#9e9d24",
    "900": "#827717",
    "A100": "#f4ff81",
    "A200": "#eeff41",
    "A400": "#c6ff00",
    "A700": "#aeea00"
  },
  Yellow: {
    "50": "#fffde7",
    "100": "#fff9c4",
    "200": "#fff59d",
    "300": "#fff176",
    "400": "#ffee58",
    "500": "#ffeb3b",
    "600": "#fdd835",
    "700": "#fbc02d",
    "800": "#f9a825",
    "900": "#f57f17",
    "A100": "#ffff8d",
    "A200": "#ffff00",
    "A400": "#ffea00",
    "A700": "#ffd600"
  },
  Amber: {
    "50": "#fff8e1",
    "100": "#ffecb3",
    "200": "#ffe082",
    "300": "#ffd54f",
    "400": "#ffca28",
    "500": "#ffc107",
    "600": "#ffb300",
    "700": "#ffa000",
    "800": "#ff8f00",
    "900": "#ff6f00",
    "A100": "#ffe57f",
    "A200": "#ffd740",
    "A400": "#ffc400",
    "A700": "#ffab00"
  },
  Orange: {
    "50": "#fff3e0",
    "100": "#ffe0b2",
    "200": "#ffcc80",
    "300": "#ffb74d",
    "400": "#ffa726",
    "500": "#ff9800",
    "600": "#fb8c00",
    "700": "#f57c00",
    "800": "#ef6c00",
    "900": "#e65100",
    "A100": "#ffd180",
    "A200": "#ffab40",
    "A400": "#ff9100",
    "A700": "#ff6d00"
  },
  DeepOrange: {
    "50": "#fbe9e7",
    "100": "#ffccbc",
    "200": "#ffab91",
    "300": "#ff8a65",
    "400": "#ff7043",
    "500": "#ff5722",
    "600": "#f4511e",
    "700": "#e64a19",
    "800": "#d84315",
    "900": "#bf360c",
    "A100": "#ff9e80",
    "A200": "#ff6e40",
    "A400": "#ff3d00",
    "A700": "#dd2c00"
  },
  Brown: {
    "50": "#efebe9",
    "100": "#d7ccc8",
    "200": "#bcaaa4",
    "300": "#a1887f",
    "400": "#8d6e63",
    "500": "#795548",
    "600": "#6d4c41",
    "700": "#5d4037",
    "800": "#4e342e",
    "900": "#3e2723"
  },
  Grey: {
    "50": "#fafafa",
    "100": "#f5f5f5",
    "200": "#eeeeee",
    "300": "#e0e0e0",
    "400": "#bdbdbd",
    "500": "#9e9e9e",
    "600": "#757575",
    "700": "#616161",
    "800": "#424242",
    "900": "#212121"
  },
  BlueGrey: {
    "50": "#eceff1",
    "100": "#cfd8dc",
    "200": "#b0bec5",
    "300": "#90a4ae",
    "400": "#78909c",
    "500": "#607d8b",
    "600": "#546e7a",
    "700": "#455a64",
    "800": "#37474f",
    "900": "#263238"
  }
};

Material = (function(superClass) {
  extend(Material, superClass);

  function Material(opts) {
    var key, value;
    if (opts == null) {
      opts = {};
    }
    for (key in defaults) {
      value = defaults[key];
      if (opts[key] == null) {
        opts[key] = value;
      }
    }
    Material.__super__.constructor.call(this, opts);
  }

  Material.prototype.showRipple = function() {
    var args, deltaX, deltaY, radius, ref, x, y;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    ref = args.length === 0 ? [this.width / 2, this.height / 2] : [args[0].offsetX || args[0], args[0].offsetY || args[1]], x = ref[0], y = ref[1];
    if (!this._ink) {
      this._inkMask = new Layer({
        name: "inkMask",
        superLayer: this,
        width: this.width,
        height: this.height,
        borderRadius: this.borderRadius,
        backgroundColor: "transparent"
      });
      this._ink = new Layer({
        name: "ink",
        superLayer: this._inkMask,
        borderRadius: "50%",
        force2d: true,
        scale: 0,
        backgroundColor: this.rippleColor
      });
    }
    deltaX = Math.max(x, this.width - x);
    deltaY = Math.max(y, this.height - y);
    radius = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
    this._ink.scale = 0;
    this._ink.opacity = 1;
    this._ink.bringToFront();
    this._ink.width = this._ink.height = radius * 2;
    this._ink.midX = x;
    this._ink.midY = y;
    this._ink.animateStop();
    return this._ink.animate({
      properties: {
        scale: 1
      },
      curve: "cubic-bezier(0, 0, 0.2, 1)",
      time: 1
    });
  };

  Material.prototype.hideRipple = function() {
    return this._ink.animate({
      properties: {
        opacity: 0
      },
      curve: "cubic-bezier(0.4, 0, 0.2, 1)",
      time: 0.8
    });
  };

  Material.define("surfaceReaction", {
    get: function() {
      return this._surfaceReaction;
    },
    set: function(value) {
      this._surfaceReaction = value ? true : false;
      if (value) {
        this.on(Events.TouchStart, this.showRipple);
        return this.on(Events.TouchEnd, this.hideRipple);
      } else {
        this.off(Events.TouchStart, this.showRipple);
        return this.off(Events.TouchEnd, this.hideRipple);
      }
    }
  });

  Material.define("rippleColor", {
    get: function() {
      return this._rippleColor;
    },
    set: function(value) {
      this._rippleColor = value;
      if (this._ink) {
        return this._ink.backgroundColor = value;
      }
    }
  });

  Material.define("elevation", {
    get: function() {
      return this._elevation;
    },
    set: function(value) {
      if (typeof value !== "number") {
        throw Error("Elevation must be a number.");
      }
      if (value > 24 || value < 0) {
        throw Error("Elevation must be between 0â€“24. See https://www.google.com/design/spec/what-is-material/elevation-shadows.html#elevation-shadows-elevation-android-");
      }
      this._elevation = value;
      if (value === 0) {
        return;
      }
      if (!this._shadow1) {
        this.clip = false;
        this._subLayers = [];
        this._shadow1 = new Layer({
          name: "shadow1",
          superLayer: this,
          width: this.width,
          height: this.height,
          borderRadius: this.borderRadius,
          backgroundColor: null
        });
        this._shadow2 = this._shadow1.copy();
        this._shadow2.name = "shadow2";
        this._shadow2.superLayer = this;
        this.on("change:width", function(value) {
          var ref;
          this._shadow1.width = this._shadow2.width = value;
          return (ref = this._inkMask) != null ? ref.width = value : void 0;
        });
        this.on("change:height", function(value) {
          var ref;
          this._shadow1.height = this._shadow2.height = value;
          return (ref = this._inkMask) != null ? ref.height = value : void 0;
        });
      }
      this.shadowSpread = 1;
      this.shadowBlur = value;
      this.shadowColor = "rgba(0,0,0,0.04)";
      this._shadow1.shadowY = value;
      this._shadow1.shadowBlur = value;
      this._shadow1.shadowColor = "rgba(0,0,0,0.24)";
      this._shadow2.shadowY = value / 2;
      this._shadow2.shadowBlur = value / 2;
      return this._shadow2.shadowColor = "rgba(\n	0,0,0,\n	" + (Utils.modulate(value, [1, 24], [0, 0.24], true)) + "\n)";
    }
  });

  Material.Color = colors;

  Material.mixin = function(ClassName) {
    var capitalizeFirstLetter, key, sanitizedClassName, value;
    sanitizedClassName = /layer/i.test(ClassName.name) ? "Layer" : ClassName.name;
    capitalizeFirstLetter = function(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    };
    for (key in defaults) {
      value = defaults[key];
      Framer.Defaults[sanitizedClassName][key] = value;
      ClassName.define(key, {
        configurable: true,
        get: this.prototype["get" + (capitalizeFirstLetter(key))],
        set: this.prototype["set" + (capitalizeFirstLetter(key))]
      });
    }
    ClassName.prototype.showRipple = this.prototype.showRipple;
    return ClassName.prototype.hideRipple = this.prototype.hideRipple;
  };

  return Material;

})(Layer);

if (typeof module !== "undefined" && module !== null) {
  module.exports = Material;
}


},{}],"DevicePixelRatio":[function(require,module,exports){
exports.DevicePixelRatio = (function() {
  var VALUE, dpr, log;

  function DevicePixelRatio() {}

  log = function(v) {
    console.log("DevicePixelRatio set as:", v);
    return v;
  };

  dpr = function() {
    var devicePixelRatio, device_2x, device_3p5x, device_3x, i, initialValue, j, k, len, len1, len2, ref, ref1, ref2, value;
    initialValue = 1;
    value = initialValue;
    if (Utils.isFramerStudio() || Utils.isDesktop()) {
      ref = ['apple-', 'google-nexus-', 'iphone-6-', 'iphone-5', 'ipad-air', 'nexus-9', 'applewatch'];
      for (i = 0, len = ref.length; i < len; i++) {
        device_2x = ref[i];
        if (_.startsWith(Framer.Device.deviceType, device_2x)) {
          value = 2;
        }
      }
      ref1 = ['apple-iphone-6s-plus', 'google-nexus-5', 'htc-one-', 'microsoft-lumia-', 'samsung-galaxy-note-', 'iphone-6plus', 'nexus-5'];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        device_3x = ref1[j];
        if (_.startsWith(Framer.Device.deviceType, device_3x)) {
          value = 3;
        }
      }
      ref2 = ['google-nexus-6'];
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        device_3p5x = ref2[k];
        if (_.startsWith(Framer.Device.deviceType, device_3p5x)) {
          value = 3.5;
        }
      }
    }
    if (value !== initialValue) {
      return log(value);
    }
    if (!Utils.isDesktop()) {
      devicePixelRatio = Utils.devicePixelRatio();
      if (devicePixelRatio > initialValue) {
        value = devicePixelRatio;
      }
    }
    return log(value);
  };

  VALUE = dpr();

  DevicePixelRatio.calc = function(v) {
    return v * VALUE;
  };

  DevicePixelRatio.value = VALUE;

  return DevicePixelRatio;

})();

exports.dpr = exports.DevicePixelRatio.calc;


},{}],"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];

exports.Material = require('framer-material');


},{"framer-material":1}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvaXE3Mi9ub2RlX21vZHVsZXMvZnJhbWVyLW1hdGVyaWFsL2FwcC5jb2ZmZWUiLCIvVXNlcnMvaXE3Mi9Eb2N1bWVudHMvZ2l0L2ZyYW1lcmpzUHJhY3RpY2VzL3Rlc3RDYXJkcy5mcmFtZXIvbW9kdWxlcy9EZXZpY2VQaXhlbFJhdGlvLmNvZmZlZSIsIi9Vc2Vycy9pcTcyL0RvY3VtZW50cy9naXQvZnJhbWVyanNQcmFjdGljZXMvdGVzdENhcmRzLmZyYW1lci9tb2R1bGVzL215TW9kdWxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0VBLElBQUEsMEJBQUE7RUFBQTs7OztBQUFBLFFBQUEsR0FDQztFQUFBLFNBQUEsRUFBVyxDQUFYO0VBQ0EsV0FBQSxFQUFhLGtCQURiO0VBRUEsZUFBQSxFQUFpQixLQUZqQjs7O0FBS0QsTUFBQSxHQUNDO0VBQUEsR0FBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQUREO0VBZUEsSUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQWhCRDtFQThCQSxNQUFBLEVBQ0M7SUFBQSxJQUFBLEVBQU0sU0FBTjtJQUNBLEtBQUEsRUFBTyxTQURQO0lBRUEsS0FBQSxFQUFPLFNBRlA7SUFHQSxLQUFBLEVBQU8sU0FIUDtJQUlBLEtBQUEsRUFBTyxTQUpQO0lBS0EsS0FBQSxFQUFPLFNBTFA7SUFNQSxLQUFBLEVBQU8sU0FOUDtJQU9BLEtBQUEsRUFBTyxTQVBQO0lBUUEsS0FBQSxFQUFPLFNBUlA7SUFTQSxLQUFBLEVBQU8sU0FUUDtJQVVBLE1BQUEsRUFBUSxTQVZSO0lBV0EsTUFBQSxFQUFRLFNBWFI7SUFZQSxNQUFBLEVBQVEsU0FaUjtJQWFBLE1BQUEsRUFBUSxTQWJSO0dBL0JEO0VBNkNBLFVBQUEsRUFDQztJQUFBLElBQUEsRUFBTSxTQUFOO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxLQUFBLEVBQU8sU0FGUDtJQUdBLEtBQUEsRUFBTyxTQUhQO0lBSUEsS0FBQSxFQUFPLFNBSlA7SUFLQSxLQUFBLEVBQU8sU0FMUDtJQU1BLEtBQUEsRUFBTyxTQU5QO0lBT0EsS0FBQSxFQUFPLFNBUFA7SUFRQSxLQUFBLEVBQU8sU0FSUDtJQVNBLEtBQUEsRUFBTyxTQVRQO0lBVUEsTUFBQSxFQUFRLFNBVlI7SUFXQSxNQUFBLEVBQVEsU0FYUjtJQVlBLE1BQUEsRUFBUSxTQVpSO0lBYUEsTUFBQSxFQUFRLFNBYlI7R0E5Q0Q7RUE0REEsTUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQTdERDtFQTJFQSxJQUFBLEVBQ0M7SUFBQSxJQUFBLEVBQU0sU0FBTjtJQUNBLEtBQUEsRUFBTyxTQURQO0lBRUEsS0FBQSxFQUFPLFNBRlA7SUFHQSxLQUFBLEVBQU8sU0FIUDtJQUlBLEtBQUEsRUFBTyxTQUpQO0lBS0EsS0FBQSxFQUFPLFNBTFA7SUFNQSxLQUFBLEVBQU8sU0FOUDtJQU9BLEtBQUEsRUFBTyxTQVBQO0lBUUEsS0FBQSxFQUFPLFNBUlA7SUFTQSxLQUFBLEVBQU8sU0FUUDtJQVVBLE1BQUEsRUFBUSxTQVZSO0lBV0EsTUFBQSxFQUFRLFNBWFI7SUFZQSxNQUFBLEVBQVEsU0FaUjtJQWFBLE1BQUEsRUFBUSxTQWJSO0dBNUVEO0VBMEZBLFNBQUEsRUFDQztJQUFBLElBQUEsRUFBTSxTQUFOO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxLQUFBLEVBQU8sU0FGUDtJQUdBLEtBQUEsRUFBTyxTQUhQO0lBSUEsS0FBQSxFQUFPLFNBSlA7SUFLQSxLQUFBLEVBQU8sU0FMUDtJQU1BLEtBQUEsRUFBTyxTQU5QO0lBT0EsS0FBQSxFQUFPLFNBUFA7SUFRQSxLQUFBLEVBQU8sU0FSUDtJQVNBLEtBQUEsRUFBTyxTQVRQO0lBVUEsTUFBQSxFQUFRLFNBVlI7SUFXQSxNQUFBLEVBQVEsU0FYUjtJQVlBLE1BQUEsRUFBUSxTQVpSO0lBYUEsTUFBQSxFQUFRLFNBYlI7R0EzRkQ7RUF5R0EsSUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQTFHRDtFQXdIQSxJQUFBLEVBQ0M7SUFBQSxJQUFBLEVBQU0sU0FBTjtJQUNBLEtBQUEsRUFBTyxTQURQO0lBRUEsS0FBQSxFQUFPLFNBRlA7SUFHQSxLQUFBLEVBQU8sU0FIUDtJQUlBLEtBQUEsRUFBTyxTQUpQO0lBS0EsS0FBQSxFQUFPLFNBTFA7SUFNQSxLQUFBLEVBQU8sU0FOUDtJQU9BLEtBQUEsRUFBTyxTQVBQO0lBUUEsS0FBQSxFQUFPLFNBUlA7SUFTQSxLQUFBLEVBQU8sU0FUUDtJQVVBLE1BQUEsRUFBUSxTQVZSO0lBV0EsTUFBQSxFQUFRLFNBWFI7SUFZQSxNQUFBLEVBQVEsU0FaUjtJQWFBLE1BQUEsRUFBUSxTQWJSO0dBekhEO0VBdUlBLEtBQUEsRUFDQztJQUFBLElBQUEsRUFBTSxTQUFOO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxLQUFBLEVBQU8sU0FGUDtJQUdBLEtBQUEsRUFBTyxTQUhQO0lBSUEsS0FBQSxFQUFPLFNBSlA7SUFLQSxLQUFBLEVBQU8sU0FMUDtJQU1BLEtBQUEsRUFBTyxTQU5QO0lBT0EsS0FBQSxFQUFPLFNBUFA7SUFRQSxLQUFBLEVBQU8sU0FSUDtJQVNBLEtBQUEsRUFBTyxTQVRQO0lBVUEsTUFBQSxFQUFRLFNBVlI7SUFXQSxNQUFBLEVBQVEsU0FYUjtJQVlBLE1BQUEsRUFBUSxTQVpSO0lBYUEsTUFBQSxFQUFRLFNBYlI7R0F4SUQ7RUFzSkEsVUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQXZKRDtFQXFLQSxJQUFBLEVBQ0M7SUFBQSxJQUFBLEVBQU0sU0FBTjtJQUNBLEtBQUEsRUFBTyxTQURQO0lBRUEsS0FBQSxFQUFPLFNBRlA7SUFHQSxLQUFBLEVBQU8sU0FIUDtJQUlBLEtBQUEsRUFBTyxTQUpQO0lBS0EsS0FBQSxFQUFPLFNBTFA7SUFNQSxLQUFBLEVBQU8sU0FOUDtJQU9BLEtBQUEsRUFBTyxTQVBQO0lBUUEsS0FBQSxFQUFPLFNBUlA7SUFTQSxLQUFBLEVBQU8sU0FUUDtJQVVBLE1BQUEsRUFBUSxTQVZSO0lBV0EsTUFBQSxFQUFRLFNBWFI7SUFZQSxNQUFBLEVBQVEsU0FaUjtJQWFBLE1BQUEsRUFBUSxTQWJSO0dBdEtEO0VBb0xBLE1BQUEsRUFDQztJQUFBLElBQUEsRUFBTSxTQUFOO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxLQUFBLEVBQU8sU0FGUDtJQUdBLEtBQUEsRUFBTyxTQUhQO0lBSUEsS0FBQSxFQUFPLFNBSlA7SUFLQSxLQUFBLEVBQU8sU0FMUDtJQU1BLEtBQUEsRUFBTyxTQU5QO0lBT0EsS0FBQSxFQUFPLFNBUFA7SUFRQSxLQUFBLEVBQU8sU0FSUDtJQVNBLEtBQUEsRUFBTyxTQVRQO0lBVUEsTUFBQSxFQUFRLFNBVlI7SUFXQSxNQUFBLEVBQVEsU0FYUjtJQVlBLE1BQUEsRUFBUSxTQVpSO0lBYUEsTUFBQSxFQUFRLFNBYlI7R0FyTEQ7RUFtTUEsS0FBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7SUFVQSxNQUFBLEVBQVEsU0FWUjtJQVdBLE1BQUEsRUFBUSxTQVhSO0lBWUEsTUFBQSxFQUFRLFNBWlI7SUFhQSxNQUFBLEVBQVEsU0FiUjtHQXBNRDtFQWtOQSxNQUFBLEVBQ0M7SUFBQSxJQUFBLEVBQU0sU0FBTjtJQUNBLEtBQUEsRUFBTyxTQURQO0lBRUEsS0FBQSxFQUFPLFNBRlA7SUFHQSxLQUFBLEVBQU8sU0FIUDtJQUlBLEtBQUEsRUFBTyxTQUpQO0lBS0EsS0FBQSxFQUFPLFNBTFA7SUFNQSxLQUFBLEVBQU8sU0FOUDtJQU9BLEtBQUEsRUFBTyxTQVBQO0lBUUEsS0FBQSxFQUFPLFNBUlA7SUFTQSxLQUFBLEVBQU8sU0FUUDtJQVVBLE1BQUEsRUFBUSxTQVZSO0lBV0EsTUFBQSxFQUFRLFNBWFI7SUFZQSxNQUFBLEVBQVEsU0FaUjtJQWFBLE1BQUEsRUFBUSxTQWJSO0dBbk5EO0VBaU9BLFVBQUEsRUFDQztJQUFBLElBQUEsRUFBTSxTQUFOO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxLQUFBLEVBQU8sU0FGUDtJQUdBLEtBQUEsRUFBTyxTQUhQO0lBSUEsS0FBQSxFQUFPLFNBSlA7SUFLQSxLQUFBLEVBQU8sU0FMUDtJQU1BLEtBQUEsRUFBTyxTQU5QO0lBT0EsS0FBQSxFQUFPLFNBUFA7SUFRQSxLQUFBLEVBQU8sU0FSUDtJQVNBLEtBQUEsRUFBTyxTQVRQO0lBVUEsTUFBQSxFQUFRLFNBVlI7SUFXQSxNQUFBLEVBQVEsU0FYUjtJQVlBLE1BQUEsRUFBUSxTQVpSO0lBYUEsTUFBQSxFQUFRLFNBYlI7R0FsT0Q7RUFnUEEsS0FBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7R0FqUEQ7RUEyUEEsSUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7R0E1UEQ7RUFzUUEsUUFBQSxFQUNDO0lBQUEsSUFBQSxFQUFNLFNBQU47SUFDQSxLQUFBLEVBQU8sU0FEUDtJQUVBLEtBQUEsRUFBTyxTQUZQO0lBR0EsS0FBQSxFQUFPLFNBSFA7SUFJQSxLQUFBLEVBQU8sU0FKUDtJQUtBLEtBQUEsRUFBTyxTQUxQO0lBTUEsS0FBQSxFQUFPLFNBTlA7SUFPQSxLQUFBLEVBQU8sU0FQUDtJQVFBLEtBQUEsRUFBTyxTQVJQO0lBU0EsS0FBQSxFQUFPLFNBVFA7R0F2UUQ7OztBQWtSSzs7O0VBQ1Esa0JBQUMsSUFBRDtBQUNaLFFBQUE7O01BRGEsT0FBSzs7QUFDbEIsU0FBQSxlQUFBOzs7UUFDQyxJQUFLLENBQUEsR0FBQSxJQUFROztBQURkO0lBR0EsMENBQU0sSUFBTjtFQUpZOztxQkFNYixVQUFBLEdBQVksU0FBQTtBQUNYLFFBQUE7SUFEWTtJQUNaLE1BQVksSUFBSSxDQUFDLE1BQUwsS0FBZSxDQUFsQixHQUF5QixDQUFDLElBQUMsQ0FBQSxLQUFELEdBQU8sQ0FBUixFQUFXLElBQUMsQ0FBQSxNQUFELEdBQVEsQ0FBbkIsQ0FBekIsR0FDSixDQUFDLElBQUssQ0FBQSxDQUFBLENBQUUsQ0FBQyxPQUFSLElBQW1CLElBQUssQ0FBQSxDQUFBLENBQXpCLEVBQTZCLElBQUssQ0FBQSxDQUFBLENBQUUsQ0FBQyxPQUFSLElBQW1CLElBQUssQ0FBQSxDQUFBLENBQXJELENBREwsRUFBQyxVQUFELEVBQUk7SUFHSixJQUFBLENBQU8sSUFBQyxDQUFBLElBQVI7TUFDQyxJQUFDLENBQUEsUUFBRCxHQUFnQixJQUFBLEtBQUEsQ0FDZjtRQUFBLElBQUEsRUFBTSxTQUFOO1FBQ0EsVUFBQSxFQUFZLElBRFo7UUFFQSxLQUFBLEVBQU8sSUFBQyxDQUFBLEtBRlI7UUFHQSxNQUFBLEVBQVEsSUFBQyxDQUFBLE1BSFQ7UUFJQSxZQUFBLEVBQWMsSUFBQyxDQUFBLFlBSmY7UUFLQSxlQUFBLEVBQWlCLGFBTGpCO09BRGU7TUFRaEIsSUFBQyxDQUFBLElBQUQsR0FBWSxJQUFBLEtBQUEsQ0FDWDtRQUFBLElBQUEsRUFBTSxLQUFOO1FBQ0EsVUFBQSxFQUFZLElBQUMsQ0FBQSxRQURiO1FBRUEsWUFBQSxFQUFjLEtBRmQ7UUFHQSxPQUFBLEVBQVMsSUFIVDtRQUlBLEtBQUEsRUFBTyxDQUpQO1FBS0EsZUFBQSxFQUFpQixJQUFDLENBQUEsV0FMbEI7T0FEVyxFQVRiOztJQWlCQSxNQUFBLEdBQVMsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksSUFBQyxDQUFBLEtBQUQsR0FBUyxDQUFyQjtJQUNULE1BQUEsR0FBUyxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxJQUFDLENBQUEsTUFBRCxHQUFVLENBQXRCO0lBQ1QsTUFBQSxHQUFTLElBQUksQ0FBQyxJQUFMLENBQVUsSUFBSSxDQUFDLEdBQUwsQ0FBUyxNQUFULEVBQWlCLENBQWpCLENBQUEsR0FBc0IsSUFBSSxDQUFDLEdBQUwsQ0FBUyxNQUFULEVBQWlCLENBQWpCLENBQWhDO0lBRVQsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFOLEdBQWM7SUFDZCxJQUFDLENBQUEsSUFBSSxDQUFDLE9BQU4sR0FBZ0I7SUFDaEIsSUFBQyxDQUFBLElBQUksQ0FBQyxZQUFOLENBQUE7SUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQU4sR0FBYyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU4sR0FBZSxNQUFBLEdBQVM7SUFDdEMsSUFBQyxDQUFBLElBQUksQ0FBQyxJQUFOLEdBQWE7SUFDYixJQUFDLENBQUEsSUFBSSxDQUFDLElBQU4sR0FBYTtJQUViLElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixDQUFBO1dBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxPQUFOLENBQ0M7TUFBQSxVQUFBLEVBQVk7UUFBQSxLQUFBLEVBQU8sQ0FBUDtPQUFaO01BQ0EsS0FBQSxFQUFPLDRCQURQO01BRUEsSUFBQSxFQUFNLENBRk47S0FERDtFQWpDVzs7cUJBc0NaLFVBQUEsR0FBWSxTQUFBO1dBQ1gsSUFBQyxDQUFBLElBQUksQ0FBQyxPQUFOLENBQ0M7TUFBQSxVQUFBLEVBQVk7UUFBQSxPQUFBLEVBQVMsQ0FBVDtPQUFaO01BQ0EsS0FBQSxFQUFPLDhCQURQO01BRUEsSUFBQSxFQUFNLEdBRk47S0FERDtFQURXOztFQU1aLFFBQUMsQ0FBQSxNQUFELENBQVEsaUJBQVIsRUFDQztJQUFBLEdBQUEsRUFBSyxTQUFBO2FBQUcsSUFBQyxDQUFBO0lBQUosQ0FBTDtJQUNBLEdBQUEsRUFBSyxTQUFDLEtBQUQ7TUFDSixJQUFDLENBQUEsZ0JBQUQsR0FBdUIsS0FBSCxHQUFjLElBQWQsR0FBd0I7TUFFNUMsSUFBRyxLQUFIO1FBQ0MsSUFBQyxDQUFBLEVBQUQsQ0FBSSxNQUFNLENBQUMsVUFBWCxFQUF1QixJQUFDLENBQUEsVUFBeEI7ZUFDQSxJQUFDLENBQUEsRUFBRCxDQUFJLE1BQU0sQ0FBQyxRQUFYLEVBQXFCLElBQUMsQ0FBQSxVQUF0QixFQUZEO09BQUEsTUFBQTtRQUlDLElBQUMsQ0FBQSxHQUFELENBQUssTUFBTSxDQUFDLFVBQVosRUFBd0IsSUFBQyxDQUFBLFVBQXpCO2VBQ0EsSUFBQyxDQUFBLEdBQUQsQ0FBSyxNQUFNLENBQUMsUUFBWixFQUFzQixJQUFDLENBQUEsVUFBdkIsRUFMRDs7SUFISSxDQURMO0dBREQ7O0VBWUEsUUFBQyxDQUFBLE1BQUQsQ0FBUSxhQUFSLEVBQ0M7SUFBQSxHQUFBLEVBQUssU0FBQTthQUFHLElBQUMsQ0FBQTtJQUFKLENBQUw7SUFDQSxHQUFBLEVBQUssU0FBQyxLQUFEO01BQ0osSUFBQyxDQUFBLFlBQUQsR0FBZ0I7TUFDaEIsSUFBaUMsSUFBQyxDQUFBLElBQWxDO2VBQUEsSUFBQyxDQUFBLElBQUksQ0FBQyxlQUFOLEdBQXdCLE1BQXhCOztJQUZJLENBREw7R0FERDs7RUFNQSxRQUFDLENBQUEsTUFBRCxDQUFRLFdBQVIsRUFDQztJQUFBLEdBQUEsRUFBSyxTQUFBO2FBQUcsSUFBQyxDQUFBO0lBQUosQ0FBTDtJQUNBLEdBQUEsRUFBSyxTQUFDLEtBQUQ7TUFDSixJQUFHLE9BQU8sS0FBUCxLQUFrQixRQUFyQjtBQUNDLGNBQU0sS0FBQSxDQUFNLDZCQUFOLEVBRFA7O01BR0EsSUFBRyxLQUFBLEdBQVEsRUFBUixJQUFjLEtBQUEsR0FBUSxDQUF6QjtBQUNDLGNBQU0sS0FBQSxDQUFNLHFKQUFOLEVBRFA7O01BR0EsSUFBQyxDQUFBLFVBQUQsR0FBYztNQUNkLElBQVUsS0FBQSxLQUFTLENBQW5CO0FBQUEsZUFBQTs7TUFHQSxJQUFBLENBQU8sSUFBQyxDQUFBLFFBQVI7UUFFQyxJQUFDLENBQUEsSUFBRCxHQUFRO1FBS1IsSUFBQyxDQUFBLFVBQUQsR0FBYztRQUVkLElBQUMsQ0FBQSxRQUFELEdBQWdCLElBQUEsS0FBQSxDQUNmO1VBQUEsSUFBQSxFQUFNLFNBQU47VUFDQSxVQUFBLEVBQVksSUFEWjtVQUVBLEtBQUEsRUFBTyxJQUFDLENBQUEsS0FGUjtVQUdBLE1BQUEsRUFBUSxJQUFDLENBQUEsTUFIVDtVQUlBLFlBQUEsRUFBYyxJQUFDLENBQUEsWUFKZjtVQUtBLGVBQUEsRUFBaUIsSUFMakI7U0FEZTtRQVFoQixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBVixDQUFBO1FBQ1osSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFWLEdBQWlCO1FBQ2pCLElBQUMsQ0FBQSxRQUFRLENBQUMsVUFBVixHQUF1QjtRQUd2QixJQUFDLENBQUEsRUFBRCxDQUFJLGNBQUosRUFBb0IsU0FBQyxLQUFEO0FBQ25CLGNBQUE7VUFBQSxJQUFDLENBQUEsUUFBUSxDQUFDLEtBQVYsR0FBa0IsSUFBQyxDQUFBLFFBQVEsQ0FBQyxLQUFWLEdBQWtCO29EQUMzQixDQUFFLEtBQVgsR0FBbUI7UUFGQSxDQUFwQjtRQUlBLElBQUMsQ0FBQSxFQUFELENBQUksZUFBSixFQUFxQixTQUFDLEtBQUQ7QUFDcEIsY0FBQTtVQUFBLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixHQUFtQixJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsR0FBbUI7b0RBQzdCLENBQUUsTUFBWCxHQUFvQjtRQUZBLENBQXJCLEVBMUJEOztNQStCQSxJQUFDLENBQUEsWUFBRCxHQUFnQjtNQUNoQixJQUFDLENBQUEsVUFBRCxHQUFjO01BQ2QsSUFBQyxDQUFBLFdBQUQsR0FBZTtNQUNmLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixHQUFvQjtNQUNwQixJQUFDLENBQUEsUUFBUSxDQUFDLFVBQVYsR0FBdUI7TUFDdkIsSUFBQyxDQUFBLFFBQVEsQ0FBQyxXQUFWLEdBQXdCO01BRXhCLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixHQUFvQixLQUFBLEdBQVE7TUFDNUIsSUFBQyxDQUFBLFFBQVEsQ0FBQyxVQUFWLEdBQXVCLEtBQUEsR0FBUTthQUMvQixJQUFDLENBQUEsUUFBUSxDQUFDLFdBQVYsR0FBd0IsbUJBQUEsR0FFdEIsQ0FBQyxLQUFLLENBQUMsUUFBTixDQUFlLEtBQWYsRUFBc0IsQ0FBQyxDQUFELEVBQUksRUFBSixDQUF0QixFQUErQixDQUFDLENBQUQsRUFBSSxJQUFKLENBQS9CLEVBQTBDLElBQTFDLENBQUQsQ0FGc0IsR0FFMkI7SUFyRC9DLENBREw7R0FERDs7RUE0REEsUUFBQyxDQUFBLEtBQUQsR0FBUTs7RUFHUixRQUFDLENBQUEsS0FBRCxHQUFRLFNBQUMsU0FBRDtBQUtQLFFBQUE7SUFBQSxrQkFBQSxHQUNJLFFBQVEsQ0FBQyxJQUFULENBQWMsU0FBUyxDQUFDLElBQXhCLENBQUgsR0FBcUMsT0FBckMsR0FBa0QsU0FBUyxDQUFDO0lBQzdELHFCQUFBLEdBQXdCLFNBQUMsTUFBRDthQUN2QixNQUFNLENBQUMsTUFBUCxDQUFjLENBQWQsQ0FBZ0IsQ0FBQyxXQUFqQixDQUFBLENBQUEsR0FBaUMsTUFBTSxDQUFDLEtBQVAsQ0FBYSxDQUFiO0lBRFY7QUFHeEIsU0FBQSxlQUFBOztNQUVDLE1BQU0sQ0FBQyxRQUFTLENBQUEsa0JBQUEsQ0FBb0IsQ0FBQSxHQUFBLENBQXBDLEdBQTJDO01BRzNDLFNBQVMsQ0FBQyxNQUFWLENBQWlCLEdBQWpCLEVBQ0M7UUFBQSxZQUFBLEVBQWMsSUFBZDtRQUNBLEdBQUEsRUFBSyxJQUFDLENBQUEsU0FBRyxDQUFBLEtBQUEsR0FBSyxDQUFDLHFCQUFBLENBQXNCLEdBQXRCLENBQUQsQ0FBTCxDQURUO1FBRUEsR0FBQSxFQUFLLElBQUMsQ0FBQSxTQUFHLENBQUEsS0FBQSxHQUFLLENBQUMscUJBQUEsQ0FBc0IsR0FBdEIsQ0FBRCxDQUFMLENBRlQ7T0FERDtBQUxEO0lBVUEsU0FBUyxDQUFBLFNBQUUsQ0FBQSxVQUFYLEdBQXdCLElBQUMsQ0FBQSxTQUFFLENBQUE7V0FDM0IsU0FBUyxDQUFBLFNBQUUsQ0FBQSxVQUFYLEdBQXdCLElBQUMsQ0FBQSxTQUFFLENBQUE7RUFyQnBCOzs7O0dBcEljOzs7RUEySnZCLE1BQU0sQ0FBRSxPQUFSLEdBQWtCOzs7OztBQ2pZWixPQUFPLENBQUM7QUFLYixNQUFBOzs7O0VBQUEsR0FBQSxHQUFNLFNBQUMsQ0FBRDtJQUNMLE9BQU8sQ0FBQyxHQUFSLENBQVksMEJBQVosRUFBd0MsQ0FBeEM7QUFDQSxXQUFPO0VBRkY7O0VBSU4sR0FBQSxHQUFNLFNBQUE7QUFDTCxRQUFBO0lBQUEsWUFBQSxHQUFlO0lBQ2YsS0FBQSxHQUFRO0lBRVIsSUFBRyxLQUFLLENBQUMsY0FBTixDQUFBLENBQUEsSUFBMEIsS0FBSyxDQUFDLFNBQU4sQ0FBQSxDQUE3QjtBQUdDO0FBQUEsV0FBQSxxQ0FBQTs7UUFDQyxJQUFhLENBQUMsQ0FBQyxVQUFGLENBQWEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUEzQixFQUF1QyxTQUF2QyxDQUFiO1VBQUEsS0FBQSxHQUFRLEVBQVI7O0FBREQ7QUFJQTtBQUFBLFdBQUEsd0NBQUE7O1FBQ0MsSUFBYSxDQUFDLENBQUMsVUFBRixDQUFhLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBM0IsRUFBdUMsU0FBdkMsQ0FBYjtVQUFBLEtBQUEsR0FBUSxFQUFSOztBQUREO0FBSUE7QUFBQSxXQUFBLHdDQUFBOztRQUNDLElBQWUsQ0FBQyxDQUFDLFVBQUYsQ0FBYSxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQTNCLEVBQXVDLFdBQXZDLENBQWY7VUFBQSxLQUFBLEdBQVEsSUFBUjs7QUFERCxPQVhEOztJQWVBLElBQXdCLEtBQUEsS0FBUyxZQUFqQztBQUFBLGFBQU8sR0FBQSxDQUFJLEtBQUosRUFBUDs7SUFHQSxJQUFBLENBQU8sS0FBSyxDQUFDLFNBQU4sQ0FBQSxDQUFQO01BQ0MsZ0JBQUEsR0FBbUIsS0FBSyxDQUFDLGdCQUFOLENBQUE7TUFFbkIsSUFBNEIsZ0JBQUEsR0FBbUIsWUFBL0M7UUFBQSxLQUFBLEdBQVEsaUJBQVI7T0FIRDs7QUFNQSxXQUFPLEdBQUEsQ0FBSSxLQUFKO0VBNUJGOztFQWlDTixLQUFBLEdBQVEsR0FBQSxDQUFBOztFQUtSLGdCQUFDLENBQUMsSUFBRixHQUFVLFNBQUMsQ0FBRDtBQUFPLFdBQU8sQ0FBQSxHQUFJO0VBQWxCOztFQUVWLGdCQUFDLENBQUMsS0FBRixHQUFVOzs7Ozs7QUFLWCxPQUFPLENBQUMsR0FBUixHQUFjLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQzs7OztBQ3ZHdkMsT0FBTyxDQUFDLEtBQVIsR0FBZ0I7O0FBRWhCLE9BQU8sQ0FBQyxVQUFSLEdBQXFCLFNBQUE7U0FDcEIsS0FBQSxDQUFNLHVCQUFOO0FBRG9COztBQUdyQixPQUFPLENBQUMsT0FBUixHQUFrQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUDs7QUFFbEIsT0FBTyxDQUFDLFFBQVIsR0FBbUIsT0FBQSxDQUFRLGlCQUFSIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlxuIyBNYXRlcmlhbCBwcm9wZXJ0aWVzXG5kZWZhdWx0cyA9XG5cdGVsZXZhdGlvbjogMFxuXHRyaXBwbGVDb2xvcjogXCJyZ2JhKDAsMCwwLDAuMDUpXCJcblx0c3VyZmFjZVJlYWN0aW9uOiBmYWxzZVxuXG4jIE1hdGVyaWFsIERlc2lnbiBjb2xvcnNcbmNvbG9ycyA9XG5cdFJlZDpcblx0XHRcIjUwXCI6IFwiI2ZmZWJlZVwiXG5cdFx0XCIxMDBcIjogXCIjZmZjZGQyXCJcblx0XHRcIjIwMFwiOiBcIiNlZjlhOWFcIlxuXHRcdFwiMzAwXCI6IFwiI2U1NzM3M1wiXG5cdFx0XCI0MDBcIjogXCIjZWY1MzUwXCJcblx0XHRcIjUwMFwiOiBcIiNmNDQzMzZcIlxuXHRcdFwiNjAwXCI6IFwiI2U1MzkzNVwiXG5cdFx0XCI3MDBcIjogXCIjZDMyZjJmXCJcblx0XHRcIjgwMFwiOiBcIiNjNjI4MjhcIlxuXHRcdFwiOTAwXCI6IFwiI2I3MWMxY1wiXG5cdFx0XCJBMTAwXCI6IFwiI2ZmOGE4MFwiXG5cdFx0XCJBMjAwXCI6IFwiI2ZmNTI1MlwiXG5cdFx0XCJBNDAwXCI6IFwiI2ZmMTc0NFwiXG5cdFx0XCJBNzAwXCI6IFwiI2Q1MDAwMFwiXG5cdFBpbms6XG5cdFx0XCI1MFwiOiBcIiNmY2U0ZWNcIlxuXHRcdFwiMTAwXCI6IFwiI2Y4YmJkMFwiXG5cdFx0XCIyMDBcIjogXCIjZjQ4ZmIxXCJcblx0XHRcIjMwMFwiOiBcIiNmMDYyOTJcIlxuXHRcdFwiNDAwXCI6IFwiI2VjNDA3YVwiXG5cdFx0XCI1MDBcIjogXCIjZTkxZTYzXCJcblx0XHRcIjYwMFwiOiBcIiNkODFiNjBcIlxuXHRcdFwiNzAwXCI6IFwiI2MyMTg1YlwiXG5cdFx0XCI4MDBcIjogXCIjYWQxNDU3XCJcblx0XHRcIjkwMFwiOiBcIiM4ODBlNGZcIlxuXHRcdFwiQTEwMFwiOiBcIiNmZjgwYWJcIlxuXHRcdFwiQTIwMFwiOiBcIiNmZjQwODFcIlxuXHRcdFwiQTQwMFwiOiBcIiNmNTAwNTdcIlxuXHRcdFwiQTcwMFwiOiBcIiNjNTExNjJcIlxuXHRQdXJwbGU6XG5cdFx0XCI1MFwiOiBcIiNmM2U1ZjVcIlxuXHRcdFwiMTAwXCI6IFwiI2UxYmVlN1wiXG5cdFx0XCIyMDBcIjogXCIjY2U5M2Q4XCJcblx0XHRcIjMwMFwiOiBcIiNiYTY4YzhcIlxuXHRcdFwiNDAwXCI6IFwiI2FiNDdiY1wiXG5cdFx0XCI1MDBcIjogXCIjOWMyN2IwXCJcblx0XHRcIjYwMFwiOiBcIiM4ZTI0YWFcIlxuXHRcdFwiNzAwXCI6IFwiIzdiMWZhMlwiXG5cdFx0XCI4MDBcIjogXCIjNmExYjlhXCJcblx0XHRcIjkwMFwiOiBcIiM0YTE0OGNcIlxuXHRcdFwiQTEwMFwiOiBcIiNlYTgwZmNcIlxuXHRcdFwiQTIwMFwiOiBcIiNlMDQwZmJcIlxuXHRcdFwiQTQwMFwiOiBcIiNkNTAwZjlcIlxuXHRcdFwiQTcwMFwiOiBcIiNhYTAwZmZcIlxuXHREZWVwUHVycGxlOlxuXHRcdFwiNTBcIjogXCIjZWRlN2Y2XCJcblx0XHRcIjEwMFwiOiBcIiNkMWM0ZTlcIlxuXHRcdFwiMjAwXCI6IFwiI2IzOWRkYlwiXG5cdFx0XCIzMDBcIjogXCIjOTU3NWNkXCJcblx0XHRcIjQwMFwiOiBcIiM3ZTU3YzJcIlxuXHRcdFwiNTAwXCI6IFwiIzY3M2FiN1wiXG5cdFx0XCI2MDBcIjogXCIjNWUzNWIxXCJcblx0XHRcIjcwMFwiOiBcIiM1MTJkYThcIlxuXHRcdFwiODAwXCI6IFwiIzQ1MjdhMFwiXG5cdFx0XCI5MDBcIjogXCIjMzExYjkyXCJcblx0XHRcIkExMDBcIjogXCIjYjM4OGZmXCJcblx0XHRcIkEyMDBcIjogXCIjN2M0ZGZmXCJcblx0XHRcIkE0MDBcIjogXCIjNjUxZmZmXCJcblx0XHRcIkE3MDBcIjogXCIjNjIwMGVhXCJcblx0SW5kaWdvOlxuXHRcdFwiNTBcIjogXCIjZThlYWY2XCJcblx0XHRcIjEwMFwiOiBcIiNjNWNhZTlcIlxuXHRcdFwiMjAwXCI6IFwiIzlmYThkYVwiXG5cdFx0XCIzMDBcIjogXCIjNzk4NmNiXCJcblx0XHRcIjQwMFwiOiBcIiM1YzZiYzBcIlxuXHRcdFwiNTAwXCI6IFwiIzNmNTFiNVwiXG5cdFx0XCI2MDBcIjogXCIjMzk0OWFiXCJcblx0XHRcIjcwMFwiOiBcIiMzMDNmOWZcIlxuXHRcdFwiODAwXCI6IFwiIzI4MzU5M1wiXG5cdFx0XCI5MDBcIjogXCIjMWEyMzdlXCJcblx0XHRcIkExMDBcIjogXCIjOGM5ZWZmXCJcblx0XHRcIkEyMDBcIjogXCIjNTM2ZGZlXCJcblx0XHRcIkE0MDBcIjogXCIjM2Q1YWZlXCJcblx0XHRcIkE3MDBcIjogXCIjMzA0ZmZlXCJcblx0Qmx1ZTpcblx0XHRcIjUwXCI6IFwiI2UzZjJmZFwiXG5cdFx0XCIxMDBcIjogXCIjYmJkZWZiXCJcblx0XHRcIjIwMFwiOiBcIiM5MGNhZjlcIlxuXHRcdFwiMzAwXCI6IFwiIzY0YjVmNlwiXG5cdFx0XCI0MDBcIjogXCIjNDJhNWY1XCJcblx0XHRcIjUwMFwiOiBcIiMyMTk2ZjNcIlxuXHRcdFwiNjAwXCI6IFwiIzFlODhlNVwiXG5cdFx0XCI3MDBcIjogXCIjMTk3NmQyXCJcblx0XHRcIjgwMFwiOiBcIiMxNTY1YzBcIlxuXHRcdFwiOTAwXCI6IFwiIzBkNDdhMVwiXG5cdFx0XCJBMTAwXCI6IFwiIzgyYjFmZlwiXG5cdFx0XCJBMjAwXCI6IFwiIzQ0OGFmZlwiXG5cdFx0XCJBNDAwXCI6IFwiIzI5NzlmZlwiXG5cdFx0XCJBNzAwXCI6IFwiIzI5NjJmZlwiXG5cdExpZ2h0Qmx1ZTpcblx0XHRcIjUwXCI6IFwiI2UxZjVmZVwiXG5cdFx0XCIxMDBcIjogXCIjYjNlNWZjXCJcblx0XHRcIjIwMFwiOiBcIiM4MWQ0ZmFcIlxuXHRcdFwiMzAwXCI6IFwiIzRmYzNmN1wiXG5cdFx0XCI0MDBcIjogXCIjMjliNmY2XCJcblx0XHRcIjUwMFwiOiBcIiMwM2E5ZjRcIlxuXHRcdFwiNjAwXCI6IFwiIzAzOWJlNVwiXG5cdFx0XCI3MDBcIjogXCIjMDI4OGQxXCJcblx0XHRcIjgwMFwiOiBcIiMwMjc3YmRcIlxuXHRcdFwiOTAwXCI6IFwiIzAxNTc5YlwiXG5cdFx0XCJBMTAwXCI6IFwiIzgwZDhmZlwiXG5cdFx0XCJBMjAwXCI6IFwiIzQwYzRmZlwiXG5cdFx0XCJBNDAwXCI6IFwiIzAwYjBmZlwiXG5cdFx0XCJBNzAwXCI6IFwiIzAwOTFlYVwiXG5cdEN5YW46XG5cdFx0XCI1MFwiOiBcIiNlMGY3ZmFcIlxuXHRcdFwiMTAwXCI6IFwiI2IyZWJmMlwiXG5cdFx0XCIyMDBcIjogXCIjODBkZWVhXCJcblx0XHRcIjMwMFwiOiBcIiM0ZGQwZTFcIlxuXHRcdFwiNDAwXCI6IFwiIzI2YzZkYVwiXG5cdFx0XCI1MDBcIjogXCIjMDBiY2Q0XCJcblx0XHRcIjYwMFwiOiBcIiMwMGFjYzFcIlxuXHRcdFwiNzAwXCI6IFwiIzAwOTdhN1wiXG5cdFx0XCI4MDBcIjogXCIjMDA4MzhmXCJcblx0XHRcIjkwMFwiOiBcIiMwMDYwNjRcIlxuXHRcdFwiQTEwMFwiOiBcIiM4NGZmZmZcIlxuXHRcdFwiQTIwMFwiOiBcIiMxOGZmZmZcIlxuXHRcdFwiQTQwMFwiOiBcIiMwMGU1ZmZcIlxuXHRcdFwiQTcwMFwiOiBcIiMwMGI4ZDRcIlxuXHRUZWFsOlxuXHRcdFwiNTBcIjogXCIjZTBmMmYxXCJcblx0XHRcIjEwMFwiOiBcIiNiMmRmZGJcIlxuXHRcdFwiMjAwXCI6IFwiIzgwY2JjNFwiXG5cdFx0XCIzMDBcIjogXCIjNGRiNmFjXCJcblx0XHRcIjQwMFwiOiBcIiMyNmE2OWFcIlxuXHRcdFwiNTAwXCI6IFwiIzAwOTY4OFwiXG5cdFx0XCI2MDBcIjogXCIjMDA4OTdiXCJcblx0XHRcIjcwMFwiOiBcIiMwMDc5NmJcIlxuXHRcdFwiODAwXCI6IFwiIzAwNjk1Y1wiXG5cdFx0XCI5MDBcIjogXCIjMDA0ZDQwXCJcblx0XHRcIkExMDBcIjogXCIjYTdmZmViXCJcblx0XHRcIkEyMDBcIjogXCIjNjRmZmRhXCJcblx0XHRcIkE0MDBcIjogXCIjMWRlOWI2XCJcblx0XHRcIkE3MDBcIjogXCIjMDBiZmE1XCJcblx0R3JlZW46XG5cdFx0XCI1MFwiOiBcIiNlOGY1ZTlcIlxuXHRcdFwiMTAwXCI6IFwiI2M4ZTZjOVwiXG5cdFx0XCIyMDBcIjogXCIjYTVkNmE3XCJcblx0XHRcIjMwMFwiOiBcIiM4MWM3ODRcIlxuXHRcdFwiNDAwXCI6IFwiIzY2YmI2YVwiXG5cdFx0XCI1MDBcIjogXCIjNGNhZjUwXCJcblx0XHRcIjYwMFwiOiBcIiM0M2EwNDdcIlxuXHRcdFwiNzAwXCI6IFwiIzM4OGUzY1wiXG5cdFx0XCI4MDBcIjogXCIjMmU3ZDMyXCJcblx0XHRcIjkwMFwiOiBcIiMxYjVlMjBcIlxuXHRcdFwiQTEwMFwiOiBcIiNiOWY2Y2FcIlxuXHRcdFwiQTIwMFwiOiBcIiM2OWYwYWVcIlxuXHRcdFwiQTQwMFwiOiBcIiMwMGU2NzZcIlxuXHRcdFwiQTcwMFwiOiBcIiMwMGM4NTNcIlxuXHRMaWdodEdyZWVuOlxuXHRcdFwiNTBcIjogXCIjZjFmOGU5XCJcblx0XHRcIjEwMFwiOiBcIiNkY2VkYzhcIlxuXHRcdFwiMjAwXCI6IFwiI2M1ZTFhNVwiXG5cdFx0XCIzMDBcIjogXCIjYWVkNTgxXCJcblx0XHRcIjQwMFwiOiBcIiM5Y2NjNjVcIlxuXHRcdFwiNTAwXCI6IFwiIzhiYzM0YVwiXG5cdFx0XCI2MDBcIjogXCIjN2NiMzQyXCJcblx0XHRcIjcwMFwiOiBcIiM2ODlmMzhcIlxuXHRcdFwiODAwXCI6IFwiIzU1OGIyZlwiXG5cdFx0XCI5MDBcIjogXCIjMzM2OTFlXCJcblx0XHRcIkExMDBcIjogXCIjY2NmZjkwXCJcblx0XHRcIkEyMDBcIjogXCIjYjJmZjU5XCJcblx0XHRcIkE0MDBcIjogXCIjNzZmZjAzXCJcblx0XHRcIkE3MDBcIjogXCIjNjRkZDE3XCJcblx0TGltZTpcblx0XHRcIjUwXCI6IFwiI2Y5ZmJlN1wiXG5cdFx0XCIxMDBcIjogXCIjZjBmNGMzXCJcblx0XHRcIjIwMFwiOiBcIiNlNmVlOWNcIlxuXHRcdFwiMzAwXCI6IFwiI2RjZTc3NVwiXG5cdFx0XCI0MDBcIjogXCIjZDRlMTU3XCJcblx0XHRcIjUwMFwiOiBcIiNjZGRjMzlcIlxuXHRcdFwiNjAwXCI6IFwiI2MwY2EzM1wiXG5cdFx0XCI3MDBcIjogXCIjYWZiNDJiXCJcblx0XHRcIjgwMFwiOiBcIiM5ZTlkMjRcIlxuXHRcdFwiOTAwXCI6IFwiIzgyNzcxN1wiXG5cdFx0XCJBMTAwXCI6IFwiI2Y0ZmY4MVwiXG5cdFx0XCJBMjAwXCI6IFwiI2VlZmY0MVwiXG5cdFx0XCJBNDAwXCI6IFwiI2M2ZmYwMFwiXG5cdFx0XCJBNzAwXCI6IFwiI2FlZWEwMFwiXG5cdFllbGxvdzpcblx0XHRcIjUwXCI6IFwiI2ZmZmRlN1wiXG5cdFx0XCIxMDBcIjogXCIjZmZmOWM0XCJcblx0XHRcIjIwMFwiOiBcIiNmZmY1OWRcIlxuXHRcdFwiMzAwXCI6IFwiI2ZmZjE3NlwiXG5cdFx0XCI0MDBcIjogXCIjZmZlZTU4XCJcblx0XHRcIjUwMFwiOiBcIiNmZmViM2JcIlxuXHRcdFwiNjAwXCI6IFwiI2ZkZDgzNVwiXG5cdFx0XCI3MDBcIjogXCIjZmJjMDJkXCJcblx0XHRcIjgwMFwiOiBcIiNmOWE4MjVcIlxuXHRcdFwiOTAwXCI6IFwiI2Y1N2YxN1wiXG5cdFx0XCJBMTAwXCI6IFwiI2ZmZmY4ZFwiXG5cdFx0XCJBMjAwXCI6IFwiI2ZmZmYwMFwiXG5cdFx0XCJBNDAwXCI6IFwiI2ZmZWEwMFwiXG5cdFx0XCJBNzAwXCI6IFwiI2ZmZDYwMFwiXG5cdEFtYmVyOlxuXHRcdFwiNTBcIjogXCIjZmZmOGUxXCJcblx0XHRcIjEwMFwiOiBcIiNmZmVjYjNcIlxuXHRcdFwiMjAwXCI6IFwiI2ZmZTA4MlwiXG5cdFx0XCIzMDBcIjogXCIjZmZkNTRmXCJcblx0XHRcIjQwMFwiOiBcIiNmZmNhMjhcIlxuXHRcdFwiNTAwXCI6IFwiI2ZmYzEwN1wiXG5cdFx0XCI2MDBcIjogXCIjZmZiMzAwXCJcblx0XHRcIjcwMFwiOiBcIiNmZmEwMDBcIlxuXHRcdFwiODAwXCI6IFwiI2ZmOGYwMFwiXG5cdFx0XCI5MDBcIjogXCIjZmY2ZjAwXCJcblx0XHRcIkExMDBcIjogXCIjZmZlNTdmXCJcblx0XHRcIkEyMDBcIjogXCIjZmZkNzQwXCJcblx0XHRcIkE0MDBcIjogXCIjZmZjNDAwXCJcblx0XHRcIkE3MDBcIjogXCIjZmZhYjAwXCJcblx0T3JhbmdlOlxuXHRcdFwiNTBcIjogXCIjZmZmM2UwXCJcblx0XHRcIjEwMFwiOiBcIiNmZmUwYjJcIlxuXHRcdFwiMjAwXCI6IFwiI2ZmY2M4MFwiXG5cdFx0XCIzMDBcIjogXCIjZmZiNzRkXCJcblx0XHRcIjQwMFwiOiBcIiNmZmE3MjZcIlxuXHRcdFwiNTAwXCI6IFwiI2ZmOTgwMFwiXG5cdFx0XCI2MDBcIjogXCIjZmI4YzAwXCJcblx0XHRcIjcwMFwiOiBcIiNmNTdjMDBcIlxuXHRcdFwiODAwXCI6IFwiI2VmNmMwMFwiXG5cdFx0XCI5MDBcIjogXCIjZTY1MTAwXCJcblx0XHRcIkExMDBcIjogXCIjZmZkMTgwXCJcblx0XHRcIkEyMDBcIjogXCIjZmZhYjQwXCJcblx0XHRcIkE0MDBcIjogXCIjZmY5MTAwXCJcblx0XHRcIkE3MDBcIjogXCIjZmY2ZDAwXCJcblx0RGVlcE9yYW5nZTpcblx0XHRcIjUwXCI6IFwiI2ZiZTllN1wiXG5cdFx0XCIxMDBcIjogXCIjZmZjY2JjXCJcblx0XHRcIjIwMFwiOiBcIiNmZmFiOTFcIlxuXHRcdFwiMzAwXCI6IFwiI2ZmOGE2NVwiXG5cdFx0XCI0MDBcIjogXCIjZmY3MDQzXCJcblx0XHRcIjUwMFwiOiBcIiNmZjU3MjJcIlxuXHRcdFwiNjAwXCI6IFwiI2Y0NTExZVwiXG5cdFx0XCI3MDBcIjogXCIjZTY0YTE5XCJcblx0XHRcIjgwMFwiOiBcIiNkODQzMTVcIlxuXHRcdFwiOTAwXCI6IFwiI2JmMzYwY1wiXG5cdFx0XCJBMTAwXCI6IFwiI2ZmOWU4MFwiXG5cdFx0XCJBMjAwXCI6IFwiI2ZmNmU0MFwiXG5cdFx0XCJBNDAwXCI6IFwiI2ZmM2QwMFwiXG5cdFx0XCJBNzAwXCI6IFwiI2RkMmMwMFwiXG5cdEJyb3duOlxuXHRcdFwiNTBcIjogXCIjZWZlYmU5XCJcblx0XHRcIjEwMFwiOiBcIiNkN2NjYzhcIlxuXHRcdFwiMjAwXCI6IFwiI2JjYWFhNFwiXG5cdFx0XCIzMDBcIjogXCIjYTE4ODdmXCJcblx0XHRcIjQwMFwiOiBcIiM4ZDZlNjNcIlxuXHRcdFwiNTAwXCI6IFwiIzc5NTU0OFwiXG5cdFx0XCI2MDBcIjogXCIjNmQ0YzQxXCJcblx0XHRcIjcwMFwiOiBcIiM1ZDQwMzdcIlxuXHRcdFwiODAwXCI6IFwiIzRlMzQyZVwiXG5cdFx0XCI5MDBcIjogXCIjM2UyNzIzXCJcblx0R3JleTpcblx0XHRcIjUwXCI6IFwiI2ZhZmFmYVwiXG5cdFx0XCIxMDBcIjogXCIjZjVmNWY1XCJcblx0XHRcIjIwMFwiOiBcIiNlZWVlZWVcIlxuXHRcdFwiMzAwXCI6IFwiI2UwZTBlMFwiXG5cdFx0XCI0MDBcIjogXCIjYmRiZGJkXCJcblx0XHRcIjUwMFwiOiBcIiM5ZTllOWVcIlxuXHRcdFwiNjAwXCI6IFwiIzc1NzU3NVwiXG5cdFx0XCI3MDBcIjogXCIjNjE2MTYxXCJcblx0XHRcIjgwMFwiOiBcIiM0MjQyNDJcIlxuXHRcdFwiOTAwXCI6IFwiIzIxMjEyMVwiXG5cdEJsdWVHcmV5OlxuXHRcdFwiNTBcIjogXCIjZWNlZmYxXCJcblx0XHRcIjEwMFwiOiBcIiNjZmQ4ZGNcIlxuXHRcdFwiMjAwXCI6IFwiI2IwYmVjNVwiXG5cdFx0XCIzMDBcIjogXCIjOTBhNGFlXCJcblx0XHRcIjQwMFwiOiBcIiM3ODkwOWNcIlxuXHRcdFwiNTAwXCI6IFwiIzYwN2Q4YlwiXG5cdFx0XCI2MDBcIjogXCIjNTQ2ZTdhXCJcblx0XHRcIjcwMFwiOiBcIiM0NTVhNjRcIlxuXHRcdFwiODAwXCI6IFwiIzM3NDc0ZlwiXG5cdFx0XCI5MDBcIjogXCIjMjYzMjM4XCJcblxuY2xhc3MgTWF0ZXJpYWwgZXh0ZW5kcyBMYXllclxuXHRjb25zdHJ1Y3RvcjogKG9wdHM9e30pIC0+XG5cdFx0Zm9yIGtleSwgdmFsdWUgb2YgZGVmYXVsdHNcblx0XHRcdG9wdHNba2V5XSA/PSB2YWx1ZVxuXG5cdFx0c3VwZXIgb3B0c1xuXHRcblx0c2hvd1JpcHBsZTogKGFyZ3MuLi4pIC0+XG5cdFx0W3gsIHldID0gaWYgYXJncy5sZW5ndGggaXMgMCB0aGVuIFtAd2lkdGgvMiwgQGhlaWdodC8yXVxuXHRcdGVsc2UgW2FyZ3NbMF0ub2Zmc2V0WCBvciBhcmdzWzBdLCBhcmdzWzBdLm9mZnNldFkgb3IgYXJnc1sxXV1cblxuXHRcdHVubGVzcyBAX2lua1xuXHRcdFx0QF9pbmtNYXNrID0gbmV3IExheWVyXG5cdFx0XHRcdG5hbWU6IFwiaW5rTWFza1wiXG5cdFx0XHRcdHN1cGVyTGF5ZXI6IEBcblx0XHRcdFx0d2lkdGg6IEB3aWR0aFxuXHRcdFx0XHRoZWlnaHQ6IEBoZWlnaHRcblx0XHRcdFx0Ym9yZGVyUmFkaXVzOiBAYm9yZGVyUmFkaXVzXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiXG5cblx0XHRcdEBfaW5rID0gbmV3IExheWVyXG5cdFx0XHRcdG5hbWU6IFwiaW5rXCJcblx0XHRcdFx0c3VwZXJMYXllcjogQF9pbmtNYXNrXG5cdFx0XHRcdGJvcmRlclJhZGl1czogXCI1MCVcIlxuXHRcdFx0XHRmb3JjZTJkOiB0cnVlXG5cdFx0XHRcdHNjYWxlOiAwXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjogQHJpcHBsZUNvbG9yXG5cdFx0XG5cdFx0ZGVsdGFYID0gTWF0aC5tYXggeCwgQHdpZHRoIC0geFxuXHRcdGRlbHRhWSA9IE1hdGgubWF4IHksIEBoZWlnaHQgLSB5XG5cdFx0cmFkaXVzID0gTWF0aC5zcXJ0KE1hdGgucG93KGRlbHRhWCwgMikgKyBNYXRoLnBvdyhkZWx0YVksIDIpKVxuXG5cdFx0QF9pbmsuc2NhbGUgPSAwXG5cdFx0QF9pbmsub3BhY2l0eSA9IDFcblx0XHRAX2luay5icmluZ1RvRnJvbnQoKVxuXHRcdEBfaW5rLndpZHRoID0gQF9pbmsuaGVpZ2h0ID0gcmFkaXVzICogMlxuXHRcdEBfaW5rLm1pZFggPSB4XG5cdFx0QF9pbmsubWlkWSA9IHlcblx0XHRcblx0XHRAX2luay5hbmltYXRlU3RvcCgpXG5cdFx0QF9pbmsuYW5pbWF0ZVxuXHRcdFx0cHJvcGVydGllczogc2NhbGU6IDFcblx0XHRcdGN1cnZlOiBcImN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpXCJcblx0XHRcdHRpbWU6IDFcblxuXHRoaWRlUmlwcGxlOiAtPlxuXHRcdEBfaW5rLmFuaW1hdGVcblx0XHRcdHByb3BlcnRpZXM6IG9wYWNpdHk6IDBcblx0XHRcdGN1cnZlOiBcImN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSlcIlxuXHRcdFx0dGltZTogMC44XG5cdFxuXHRAZGVmaW5lIFwic3VyZmFjZVJlYWN0aW9uXCIsXG5cdFx0Z2V0OiAtPiBAX3N1cmZhY2VSZWFjdGlvblxuXHRcdHNldDogKHZhbHVlKSAtPlxuXHRcdFx0QF9zdXJmYWNlUmVhY3Rpb24gPSBpZiB2YWx1ZSB0aGVuIHRydWUgZWxzZSBmYWxzZVxuXHRcdFx0XG5cdFx0XHRpZiB2YWx1ZVxuXHRcdFx0XHRAb24gRXZlbnRzLlRvdWNoU3RhcnQsIEBzaG93UmlwcGxlXG5cdFx0XHRcdEBvbiBFdmVudHMuVG91Y2hFbmQsIEBoaWRlUmlwcGxlXG5cdFx0XHRlbHNlXG5cdFx0XHRcdEBvZmYgRXZlbnRzLlRvdWNoU3RhcnQsIEBzaG93UmlwcGxlXG5cdFx0XHRcdEBvZmYgRXZlbnRzLlRvdWNoRW5kLCBAaGlkZVJpcHBsZVxuXHRcblx0QGRlZmluZSBcInJpcHBsZUNvbG9yXCIsXG5cdFx0Z2V0OiAtPiBAX3JpcHBsZUNvbG9yXG5cdFx0c2V0OiAodmFsdWUpIC0+XG5cdFx0XHRAX3JpcHBsZUNvbG9yID0gdmFsdWVcblx0XHRcdEBfaW5rLmJhY2tncm91bmRDb2xvciA9IHZhbHVlIGlmIEBfaW5rXG5cdFxuXHRAZGVmaW5lIFwiZWxldmF0aW9uXCIsXG5cdFx0Z2V0OiAtPiBAX2VsZXZhdGlvblxuXHRcdHNldDogKHZhbHVlKSAtPlxuXHRcdFx0aWYgdHlwZW9mIHZhbHVlIGlzbnQgXCJudW1iZXJcIlxuXHRcdFx0XHR0aHJvdyBFcnJvciBcIkVsZXZhdGlvbiBtdXN0IGJlIGEgbnVtYmVyLlwiXG5cblx0XHRcdGlmIHZhbHVlID4gMjQgb3IgdmFsdWUgPCAwXG5cdFx0XHRcdHRocm93IEVycm9yIFwiRWxldmF0aW9uIG11c3QgYmUgYmV0d2VlbiAw4oCTMjQuIFNlZSBodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL3doYXQtaXMtbWF0ZXJpYWwvZWxldmF0aW9uLXNoYWRvd3MuaHRtbCNlbGV2YXRpb24tc2hhZG93cy1lbGV2YXRpb24tYW5kcm9pZC1cIlxuXHRcdFx0XHRcblx0XHRcdEBfZWxldmF0aW9uID0gdmFsdWVcblx0XHRcdHJldHVybiBpZiB2YWx1ZSBpcyAwXG5cblx0XHRcdCMgY3JlYXRlIHNoYWRvd3MgaWYgdGhleSBkb24ndCBleGlzdFxuXHRcdFx0dW5sZXNzIEBfc2hhZG93MVxuXHRcdFx0XHQjIG1ha2Ugc3VyZSB3ZSBkb24ndCBjbGlwIG91ciBzaGFkb3dzXG5cdFx0XHRcdEBjbGlwID0gZmFsc2VcblxuXHRcdFx0XHQjIFRPRE86IEZpeCB1cHN0cmVhbS5cblx0XHRcdFx0IyBUaGlzIGlzIGEgaGFjayBiZWNhdXNlIGBMYXllciNfc3ViTGF5ZXJzYFxuXHRcdFx0XHQjIGlzIHNldCBhZnRlciBjb25zdHJ1Y3Rpb24uXG5cdFx0XHRcdEBfc3ViTGF5ZXJzID0gW11cblxuXHRcdFx0XHRAX3NoYWRvdzEgPSBuZXcgTGF5ZXJcblx0XHRcdFx0XHRuYW1lOiBcInNoYWRvdzFcIlxuXHRcdFx0XHRcdHN1cGVyTGF5ZXI6IEBcblx0XHRcdFx0XHR3aWR0aDogQHdpZHRoXG5cdFx0XHRcdFx0aGVpZ2h0OiBAaGVpZ2h0XG5cdFx0XHRcdFx0Ym9yZGVyUmFkaXVzOiBAYm9yZGVyUmFkaXVzXG5cdFx0XHRcdFx0YmFja2dyb3VuZENvbG9yOiBudWxsXG5cdFx0XHRcdFx0XG5cdFx0XHRcdEBfc2hhZG93MiA9IEBfc2hhZG93MS5jb3B5KClcblx0XHRcdFx0QF9zaGFkb3cyLm5hbWUgPSBcInNoYWRvdzJcIlxuXHRcdFx0XHRAX3NoYWRvdzIuc3VwZXJMYXllciA9IEBcblxuXHRcdFx0XHQjIHJlc2l6ZSBzaGFkb3dzIGFuZCBpbmsgbWFzayB3aXRoIHBhcmVudCBtYXRlcmlhbFxuXHRcdFx0XHRAb24gXCJjaGFuZ2U6d2lkdGhcIiwgKHZhbHVlKSAtPlxuXHRcdFx0XHRcdEBfc2hhZG93MS53aWR0aCA9IEBfc2hhZG93Mi53aWR0aCA9IHZhbHVlXG5cdFx0XHRcdFx0QF9pbmtNYXNrPy53aWR0aCA9IHZhbHVlXG5cblx0XHRcdFx0QG9uIFwiY2hhbmdlOmhlaWdodFwiLCAodmFsdWUpIC0+XG5cdFx0XHRcdFx0QF9zaGFkb3cxLmhlaWdodCA9IEBfc2hhZG93Mi5oZWlnaHQgPSB2YWx1ZVxuXHRcdFx0XHRcdEBfaW5rTWFzaz8uaGVpZ2h0ID0gdmFsdWVcblxuXHRcdFx0IyBzZXQgZWxldmF0aW9uIChzaGFkb3cgc3R5bGVzKVxuXHRcdFx0QHNoYWRvd1NwcmVhZCA9IDFcblx0XHRcdEBzaGFkb3dCbHVyID0gdmFsdWVcblx0XHRcdEBzaGFkb3dDb2xvciA9IFwicmdiYSgwLDAsMCwwLjA0KVwiXG5cdFx0XHRAX3NoYWRvdzEuc2hhZG93WSA9IHZhbHVlXG5cdFx0XHRAX3NoYWRvdzEuc2hhZG93Qmx1ciA9IHZhbHVlXG5cdFx0XHRAX3NoYWRvdzEuc2hhZG93Q29sb3IgPSBcInJnYmEoMCwwLDAsMC4yNClcIlxuXHRcdFx0XG5cdFx0XHRAX3NoYWRvdzIuc2hhZG93WSA9IHZhbHVlIC8gMlxuXHRcdFx0QF9zaGFkb3cyLnNoYWRvd0JsdXIgPSB2YWx1ZSAvIDJcblx0XHRcdEBfc2hhZG93Mi5zaGFkb3dDb2xvciA9IFwiXCJcInJnYmEoXG5cdFx0XHRcdDAsMCwwLFxuXHRcdFx0XHQje1V0aWxzLm1vZHVsYXRlIHZhbHVlLCBbMSwgMjRdLCBbMCwgMC4yNF0sIHRydWUgfVxuXHRcdFx0KVwiXCJcIlxuXG5cdCMgTWF0ZXJpYWwgY29sb3IgcGFsZXR0ZVxuXHQjIGUuZy4gTWF0ZXJpYWwuQ29sb3IuUmVkWzUwXVxuXHRAQ29sb3I6IGNvbG9yc1xuXG5cdCMgQWRkIGBNYXRlcmlhbGAgcHJvcGVydGllcyB0byBvdGhlciBjbGFzc2VzXG5cdEBtaXhpbjogKENsYXNzTmFtZSkgLT5cblx0XHQjIFRPRE86IGNvbnNpZGVyIGlmIHRoaXMgZXZlbiBtYWtlcyBzZW5zZVxuXHRcdCMgdG8gbWl4aW4gdG8gb3RoZXIgY2xhc3Nlcy5cblx0XHRcblx0XHQjIFRoaXMgaXMgYSB0ZW1wb3JhcnkgZml4IGZvciBgTW9iaWxlU2Nyb2xsRml4TGF5ZXJgIG9uIG1vYmlsZS5cblx0XHRzYW5pdGl6ZWRDbGFzc05hbWUgPVxuXHRcdFx0aWYgL2xheWVyL2kudGVzdCBDbGFzc05hbWUubmFtZSB0aGVuIFwiTGF5ZXJcIiBlbHNlIENsYXNzTmFtZS5uYW1lXG5cdFx0Y2FwaXRhbGl6ZUZpcnN0TGV0dGVyID0gKHN0cmluZykgLT5cblx0XHRcdHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKVxuXG5cdFx0Zm9yIGtleSwgdmFsdWUgb2YgZGVmYXVsdHNcblx0XHRcdCMgU2V0IGRlZmF1bHRzXG5cdFx0XHRGcmFtZXIuRGVmYXVsdHNbc2FuaXRpemVkQ2xhc3NOYW1lXVtrZXldID0gdmFsdWVcblxuXHRcdFx0IyBBZGQgZ2V0dGVyL3NldHRlciBwcm9wZXJ0aWVzXG5cdFx0XHRDbGFzc05hbWUuZGVmaW5lIGtleSxcblx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdGdldDogQDo6W1wiZ2V0I3tjYXBpdGFsaXplRmlyc3RMZXR0ZXIga2V5fVwiXVxuXHRcdFx0XHRzZXQ6IEA6OltcInNldCN7Y2FwaXRhbGl6ZUZpcnN0TGV0dGVyIGtleX1cIl1cblx0XHRcblx0XHRDbGFzc05hbWU6OnNob3dSaXBwbGUgPSBAOjpzaG93UmlwcGxlXG5cdFx0Q2xhc3NOYW1lOjpoaWRlUmlwcGxlID0gQDo6aGlkZVJpcHBsZVxuXG5tb2R1bGU/LmV4cG9ydHMgPSBNYXRlcmlhbFxuIiwiIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4jIENyZWF0ZWQgb24gMjMgREVDIDIwMTUgYnkgSm9yZGFuIERvYnNvbiAvIEBqb3JkYW5kb2Jzb24gLyBqb3JkYW5AYnJvdGhlLnJzXG4jIFVwZGF0ZWQgb24gMTIgQVBSIDIwMTYgYnkgSm9yZGFuIERvYnNvbiB3aXRoIHRoYW5rcyB0byBOaWtvbGF5IEJlcmV6b3Zza2l5IVxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4jXG4jIFVzZSB0byBtZWFzdXJlIHBpeGVscyBhdCAxeCBhbmQgaGF2ZSBpdCBhZGp1c3QgZm9yIHRoZSBQaXhlbCBSYXRpb1xuI1xuIyBUbyBHZXQgU3RhcnRlZC4uLlxuI1xuIyAgMS4gUGxhY2UgdGhpcyBmaWxlIGluIEZyYW1lciBTdHVkaW8gbW9kdWxlcyBkaXJlY3RvcnlcbiNcbiMgIDIuIEluIHlvdXIgcHJvamVjdCBpbmNsdWRlOlxuI1xuIyAgICAge2Rwcn0gPSByZXF1aXJlICdEZXZpY2VQaXhlbFJhdGlvJ1xuI1xuIyAgMy4gV2hlbiB5b3UgY3JlYXRlIGEgbGF5ZXIgZG8gc28gQCAxeCBhbmQgYWRkIHRoZSBkcHIgZnVuY3Rpb24gdG8gdGhlIHZhbHVlXG4jXG4jICAgICByZWN0ID0gbmV3IExheWVyXG4jICAgICAgIHdpZHRoOiAgZHByKDMwMClcbiMgICAgICAgaGVpZ2h0OiBkcHIgNTBcbiMgICAgICAgeDogICAgICAoZHByIDE2KVxuIyBcbiMgIDQuIFVzZSBpdCBmb3IgbW9yZSB0aGFuIGxheWVyIHNpemUuIEhlcmUncyBhZHZhbmNlZCB1c2FnZSBmb3IgbXVsdGkgZGV2aWNlczpcbiNcbiNcdFx0XHQjIEFkZCBhIGxpc3Qgcm93IHcvIHRoZSBoZWlnaHQgJiB0ZXh0IHNpemluZy9sYXlvdXQgdXNpbmcgZHByKClcbiNcbiMgICAgIGxpc3RSb3cgPSBuZXcgTGF5ZXJcbiMgICAgICAgd2lkdGg6IFNjcmVlbi53aWR0aFxuIyAgICAgICBoZWlnaHQ6IGRwciA0NFxuIyAgICAgICBodG1sOiBcIkxpc3QgSXRlbVwiXG4jICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjZmZmXCJcbiMgICAgICAgY29sb3I6IFwiIzAwMFwiXG4jICAgICAgIHN0eWxlOiBcbiMgICAgICAgICBmb250OiBcIjQwMCAje2RwciAxNH1weC8je2RwciA0Mn1weCAtYXBwbGUtc3lzdGVtLCBIZWx2ZXRpY2EgTmV1ZVwiXG4jICAgICAgICAgdGV4dEluZGVudDogXCIje2RwciAxNX1weFwiXG4jXG4jIFx0XHQjIEFkZCBhIGNoZXZyb24gd2l0aCB0aGUgc2l6ZSwgcmlnaHQgbWFyZ2luICYgc2hhZG93IHN0cm9rZSB1c2luZyBkcHIoKVxuIyAgICAgXG4jICAgICBsaXN0Q2hldnJvbiA9IG5ldyBMYXllclxuIyAgICAgXHRzdXBlckxheWVyOiBsaXN0Um93XG4jICAgICBcdHdpZHRoOiAgZHByIDlcbiMgICAgIFx0aGVpZ2h0OiBkcHIgOVxuIyAgICAgXHRtYXhYOiBsaXN0Um93LndpZHRoIC0gZHByIDE1XG4jICAgICBcdHk6ICAgIGxpc3RSb3cuaGVpZ2h0IC8gMlxuIyAgICAgXHRvcmlnaW5YOiAxXG4jICAgICBcdG9yaWdpblk6IDBcbiMgICAgIFx0cm90YXRpb246IDQ1XG4jICAgICBcdGJhY2tncm91bmRDb2xvcjogXCJcIlxuIyAgICAgXHRzdHlsZTpcbiMgICAgIFx0XHRib3hTaGFkb3c6IFwiaW5zZXQgLSN7ZHByIDJ9cHggI3tkcHIgMn1weCAwICNCQ0JDQzFcIlxuI1xuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbmNsYXNzIGV4cG9ydHMuRGV2aWNlUGl4ZWxSYXRpb1xuXG5cdCMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cdCMgUHJpdmF0ZSBNZXRob2RzICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cdFxuXHRsb2cgPSAodikgLT5cblx0XHRjb25zb2xlLmxvZyBcIkRldmljZVBpeGVsUmF0aW8gc2V0IGFzOlwiLCB2XG5cdFx0cmV0dXJuIHZcblxuXHRkcHIgPSAoKSAtPlxuXHRcdGluaXRpYWxWYWx1ZSA9IDFcblx0XHR2YWx1ZSA9IGluaXRpYWxWYWx1ZVxuXHRcdCMgQ2hlY2sgaWYgaW4gU3R1ZGlvIG9yIERlc2t0b3AgdG8gZmlndXJlIG91dCB3aGF0IHRoZSBzY2FsaW5nIHNob3VsZCBiZVxuXHRcdGlmIFV0aWxzLmlzRnJhbWVyU3R1ZGlvKCkgb3IgVXRpbHMuaXNEZXNrdG9wKClcblxuXHRcdFx0IyBDaGVjayBmb3IgMnggZGV2aWNlcyBcblx0XHRcdGZvciBkZXZpY2VfMnggaW4gWydhcHBsZS0nLCAnZ29vZ2xlLW5leHVzLScsICdpcGhvbmUtNi0nLCAnaXBob25lLTUnLCAnaXBhZC1haXInLCAnbmV4dXMtOScsICdhcHBsZXdhdGNoJ11cblx0XHRcdFx0dmFsdWUgPSAyIGlmIF8uc3RhcnRzV2l0aChGcmFtZXIuRGV2aWNlLmRldmljZVR5cGUsIGRldmljZV8yeClcblxuXHRcdFx0IyBDaGVjayBmb3IgM3ggZGV2aWNlc1xuXHRcdFx0Zm9yIGRldmljZV8zeCBpbiBbJ2FwcGxlLWlwaG9uZS02cy1wbHVzJywgJ2dvb2dsZS1uZXh1cy01JywgJ2h0Yy1vbmUtJywgJ21pY3Jvc29mdC1sdW1pYS0nLCAnc2Ftc3VuZy1nYWxheHktbm90ZS0nLCAnaXBob25lLTZwbHVzJywgJ25leHVzLTUnXVxuXHRcdFx0XHR2YWx1ZSA9IDMgaWYgXy5zdGFydHNXaXRoKEZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZSwgZGV2aWNlXzN4KVxuXHRcdFx0XHRcblx0XHRcdCMgQ2hlY2sgZm9yIDMuNXggZGV2aWNlc1xuXHRcdFx0Zm9yIGRldmljZV8zcDV4IGluIFsnZ29vZ2xlLW5leHVzLTYnXVxuXHRcdFx0XHR2YWx1ZSA9IDMuNSBpZiBfLnN0YXJ0c1dpdGgoRnJhbWVyLkRldmljZS5kZXZpY2VUeXBlLCBkZXZpY2VfM3A1eClcblxuXHRcdCMgUmV0dXJuIGlmIHRoZSB2YWx1ZSBjaGFuZ2VkLi4uIG90aGVyd2lzZSBjb250aW51ZVxuXHRcdHJldHVybiBsb2cgdmFsdWUgdW5sZXNzIHZhbHVlIGlzIGluaXRpYWxWYWx1ZVxuXHRcdFxuXHRcdCMgU2V0IFVuaXRzIGJhc2VkIG9uIERldmljZSBQaXhlbCBSYXRpbyBFeGNlcHQgZm9yIERlc2t0b3Bcblx0XHR1bmxlc3MgVXRpbHMuaXNEZXNrdG9wKClcblx0XHRcdGRldmljZVBpeGVsUmF0aW8gPSBVdGlscy5kZXZpY2VQaXhlbFJhdGlvKClcblx0XHRcdCMgaWYgaXQncyBncmVhdGVyIHRoYW4gMSB0aGVuIHVwZGF0ZSBpdCFcblx0XHRcdHZhbHVlID0gZGV2aWNlUGl4ZWxSYXRpbyBpZiBkZXZpY2VQaXhlbFJhdGlvID4gaW5pdGlhbFZhbHVlXG5cblx0XHQjIHJldHVybiB0aGUgdmFsdWUgZXZlbiBpZiBpdCBoYXNuJ3QgY2hhbmdlZCBhbmQgbG9nIGl0IGV2ZXJ5dGltZSBpdHMgc2V0XG5cdFx0cmV0dXJuIGxvZyB2YWx1ZVxuXHRcdFxuXHQjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXHQjIENvbnN0YW50ICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXHRcblx0VkFMVUUgPSBkcHIoKVxuXG5cdCMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cdCMgUHVibGljIE1ldGhvZHMgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cdFxuXHRALmNhbGMgID0gKHYpIC0+IHJldHVybiB2ICogVkFMVUVcblx0XG5cdEAudmFsdWUgPSBWQUxVRVxuXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuIyBDcmVhdGUgYSBzaG9ydGhhbmQgdG8gZ2V0IGRpcmVjdGx5IHRvIHRoZSBjYWxjIHN0YXRlbWVudFxuXG5leHBvcnRzLmRwciA9IGV4cG9ydHMuRGV2aWNlUGl4ZWxSYXRpby5jYWxjXG4iLCIjIEFkZCB0aGUgZm9sbG93aW5nIGxpbmUgdG8geW91ciBwcm9qZWN0IGluIEZyYW1lciBTdHVkaW8uXG4jIG15TW9kdWxlID0gcmVxdWlyZSBcIm15TW9kdWxlXCJcbiMgUmVmZXJlbmNlIHRoZSBjb250ZW50cyBieSBuYW1lLCBsaWtlIG15TW9kdWxlLm15RnVuY3Rpb24oKSBvciBteU1vZHVsZS5teVZhclxuXG5leHBvcnRzLm15VmFyID0gXCJteVZhcmlhYmxlXCJcblxuZXhwb3J0cy5teUZ1bmN0aW9uID0gLT5cblx0cHJpbnQgXCJteUZ1bmN0aW9uIGlzIHJ1bm5pbmdcIlxuXG5leHBvcnRzLm15QXJyYXkgPSBbMSwgMiwgM11cblxuZXhwb3J0cy5NYXRlcmlhbCA9IHJlcXVpcmUgJ2ZyYW1lci1tYXRlcmlhbCdcbiJdfQ==
